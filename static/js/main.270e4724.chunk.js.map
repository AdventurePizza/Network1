{"version":3,"sources":["firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","a","fetch","method","fetchRes","ok","json","profile","headers","body","JSON","stringify","message","statusText","Provider","value","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","name","versionNames","tempID","uuidv4","App","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","color","setColor","useContext","timestamp","Date","now","username","setProfile","profiles","setProfiles","usernameInput","setUsernameInput","enqueueSnackbar","useSnackbar","statusHistory","setStatusHistory","version","getActiveAccount","clearActiveAccount","then","sync","address","console","log","requestPermissions","permissions","updateStatus","emit","concat","sort","b","parseFloat","variant","useEffect","result","recentStatus","history","getProfiles","onProfileChange","data","find","prof","index","slice","on","off","tempProfile","getAcc","className","style","fontSize","display","alignItems","margin","Select","label","onChange","e","target","href","MenuItem","marginTop","marginLeft","width","marginRight","overflowX","map","textAlign","height","backgroundColor","border","marginInline","Button","title","size","onClick","navigator","clipboard","writeText","TextField","id","placeholder","event","length","onKeyPress","position","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.270e4724.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network1-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\n//ui\nimport { Button, Select, MenuItem, TextField } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\nimport { HexColorPicker } from \"react-colorful\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network1-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [color, setColor] = useState(\"#FFFF00\");\n  const { getProfileFB, setProfileFB, getAllProfilesFB } =\n    useContext(FirebaseContext);\n  const [profile, setProfile] = useState({\n    color: color,\n    timestamp: Date.now(),\n    key: tempID,\n    username: \"\",\n  });\n  const [profiles, setProfiles] = useState([\n    { color: \"blue\", timestamp: Date.now(), key: tempID, username: \"user x\" },\n  ]);\n  const [usernameInput, setUsernameInput] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [statusHistory, setStatusHistory] = useState([]);\n  const [\n    version,\n    //setVersion\n  ] = useState(1);\n\n  const handleChangeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length < 25) setUsernameInput(event.target.value);\n    else setUsernameInput(event.target.value.slice(0, 25));\n  };\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getAllProfilesFB();\n      setProfiles(result.recentStatus);\n      setStatusHistory(result.history);\n    }\n    getProfiles();\n  }, [getAllProfilesFB]);\n\n  useEffect(() => {\n    const onProfileChange = (data) => {\n      setStatusHistory(\n        statusHistory\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n\n      //recent\n      profiles.find(function (prof, index) {\n        if (prof.key === data.key) {\n          setProfiles([\n            ...profiles.slice(0, index),\n            data,\n            ...profiles.slice(index + 1),\n          ]);\n          return true;\n        }\n        return false;\n      });\n    };\n\n    socket.on(\"profile\", onProfileChange);\n\n    return () => {\n      socket.off(\"profile\", onProfileChange);\n    };\n  }, [profiles, setProfiles, statusHistory]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        let tempProfile = await getProfileFB(activeAccount.address);\n        setProfile(tempProfile);\n        setUsernameInput(tempProfile.username);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount, getProfileFB]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  function updateStatus() {\n    if (activeAccount) {\n      let timestamp = Date.now();\n      console.log(timestamp);\n      setProfile({\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      //add socket\n      socket.emit(\"profile\", {\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setProfileFB({\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setStatusHistory(\n        statusHistory\n          .concat([\n            {\n              ...profile,\n              color: color,\n              key: activeAccount.address,\n              username: usernameInput,\n              timestamp: timestamp,\n            },\n          ])\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n      enqueueSnackbar(\"Status Updated ! \", {\n        variant: \"success\",\n      });\n      setUsernameInput(\"\");\n    } else {\n      sync();\n    }\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateStatus();\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n        }}\n      >\n        <b>Network </b>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            let target;\n            if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            } else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            } else if (e.target.value === 4) {\n              target = \"https://adventurepizza.github.io/Network4/\";\n            } else if (e.target.value === 5) {\n              target = \"https://adventurepizza.github.io/Network5/\";\n            }\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n          <MenuItem value={4}> {versionNames[4]}</MenuItem>\n          <MenuItem value={5}> {versionNames[5]}</MenuItem>\n        </Select>\n        &nbsp; 📠\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>History</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        {statusHistory &&\n          statusHistory.map((profile) => (\n            <div\n              key={profile.timestamp}\n              style={{ textAlign: \"center\", margin: 6 }}\n            >\n              <div\n                style={{\n                  width: 80,\n                  height: 20,\n                  backgroundColor: profile.color,\n                  border: \"solid 4px \",\n                  marginInline: 4,\n                }}\n              ></div>\n              <Button\n                title={profile.key}\n                size={\"small\"}\n                onClick={async () => {\n                  navigator.clipboard.writeText(profile.key);\n                  enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                    variant: \"success\",\n                  });\n                }}\n              >\n                {profile.username}{\" \"}\n              </Button>\n            </div>\n          ))}\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 6, marginLeft: 13 }}>\n        <b>Recent Status</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        <div style={{ textAlign: \"center\", margin: 6 }}>\n          <div\n            style={{\n              width: 80,\n              height: 20,\n              backgroundColor: profile.color,\n              border: \"solid 4px \",\n              marginInline: 4,\n            }}\n          ></div>\n\n          <Button\n            title={profile.key}\n            size={\"small\"}\n            onClick={async () => {\n              navigator.clipboard.writeText(profile.key);\n              enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                variant: \"success\",\n              });\n            }}\n          >\n            {profile.username}{\" \"}\n          </Button>\n        </div>\n\n        {profiles &&\n          profiles.map(\n            (profile) =>\n              (!activeAccount || profile.key !== activeAccount.address) && (\n                <div\n                  key={profile.key}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: 80,\n                      height: 20,\n                      backgroundColor: profile.color,\n                      border: \"solid 4px \",\n                      marginInline: 4,\n                    }}\n                  ></div>\n                  <Button\n                    title={profile.key}\n                    size={\"small\"}\n                    onClick={async () => {\n                      navigator.clipboard.writeText(profile.key);\n                      enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                        variant: \"success\",\n                      });\n                    }}\n                  >\n                    {profile.username}{\" \"}\n                  </Button>\n                </div>\n              )\n          )}\n      </div>\n\n      <div style={{ width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <HexColorPicker color={color} onChange={setColor} />\n        <br></br>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"info\"\n            variant=\"outlined\"\n            placeholder=\"Status\"\n            size=\"small\"\n            onChange={handleChangeUsername}\n            value={usernameInput}\n            onKeyPress={handleKeyPress}\n          />\n          <Button\n            size={\"small\"}\n            title={\"update status\"}\n            onClick={() => {\n              updateStatus();\n            }}\n          >\n            {\" \"}\n            {activeAccount ? (\n              <u>update status</u>\n            ) : (\n              <u>sync to join network1</u>\n            )}{\" \"}\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"bottom-left\" style={{ position: \"absolute\" }}>\n        <Button title={\"Adventure Networks\"} size={\"small\"} onClick={() => { }}>\n          {\" \"}\n          <div style={{ textAlign: \"left\" }}>\n            {\" \"}\n            Adventure <br></br>Networks{\" \"}\n          </div>{\" \"}\n        </Button>\n      </div>\n\n      <div\n        className=\"bottom-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}